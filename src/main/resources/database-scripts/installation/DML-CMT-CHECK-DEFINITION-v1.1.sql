REM INSERTING into O_LDS_META.CMT_CHECK_DEFINITION
SET DEFINE OFF;
--TRUNCATE THE TABLE;
--truncate table CMT_CHECK_DEFINITION;
-- INVALID TABLES IN LAYERS OR BETWEEN LAYERS
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE)
values (seq_checks.nextval,'CHK_L1_INVALID_TABLES','Checks for table that do not have the correct prefix for L1','MANDATORY','TABLE',null,'ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_L1_INVALID_TABLES','${L1_NONVALID_TABLES}');
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_BASE_vs_L2','Checks for table that do are in BASE and are not in L2','MANDATORY','TABLE',null,'ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_BASE_vs_L2','select '${BASE_PREFIX}'||name_without_prefix,src_application_cd from(select substr(table_name,4) name_without_prefix,src_application_cd from (${BASE_VALID_TABLES}) minus select substr(table_name,4) name_without_prefix,src_application_cd from (${L2_VALID_TABLES}))');
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_L2_INVALID_TABLES','Checks for table that do not have the correct prefix for L2','MANDATORY','TABLE',null,'ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_L2_INVALID_TABLES','${L2_NONVALID_TABLES}');
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_BASE_INVALID_TABLES','Checks for table that do not have the correct prefix for BASE','MANDATORY','TABLE',null,'ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_BASE_INVALID_TABLES','${BASE_NONVALID_TABLES}');
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_TBL_UNQ','Checks for tables names that are not unique across all layers','MANDATORY','TABLE',null,'ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_TBL_UNQ','select table_name from O_LDS_META.CMT_TABLE group by table_name having count(*)>1');
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_L2_vs_L1','Checks for tables that are in L2 and are not in L1','MANDATORY','TABLE',null,'ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_L2_vs_L1','select '${L2_PREFIX}'||name_without_prefix,src_application_cd from(select substr(table_name,4) name_without_prefix,src_application_cd from (${L2_VALID_TABLES}) minus select substr(table_name,4) name_without_prefix,src_application_cd from (${L1_VALID_TABLES}))');
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_ST_CORE_INV_TABLES','Checks for tables that are in STAGE CORE and do not have the standard prefix','MANDATORY','TABLE',null,'ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_ST_CORE_INV_TABLES','select * from O_LDS_META.CMT_TABLE where layer_name=''${SC_LAYER_NAME}'' and instr(table_name,''${SC_PREFIX}'')<>1');
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_SS_CORE_INV_TABLES','Checks for tables that are in STAGE SEMNATIC and do not have the standard prefix','MANDATORY','TABLE',null,'ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_SS_CORE_INV_TABLES','select * from O_LDS_META.CMT_TABLE where layer_name=''${SS_LAYER_NAME}'' and instr(table_name,''${SS_PREFIX}'')<>1');
-- INVALID COLUMNS DEFINTIONS or COLUMNS MISMATCH BETWEEN LAYERS
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_NULL_PK','Checks for primary keys that are marked as nullable','MANDATORY','COLUMN',null,'ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_NULL_PK','select * from o_lds_meta.cmt_column where column_pk_ind=''Y'' and column_nullable_ind=''Y''');





-- STATIC METADATA
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_LAYER', 'Checks static metadata for table CMT_LAYER' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_LAYER)', 'CMR_CHECK','CHK_STM_LAYER');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_SUBJECT_AREA', 'Checks static metadata for table CMT_SUBJECT_AREA' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_SUBJECT_AREA)', 'CMR_CHECK','CHK_STM_SUBJECT_AREA');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_DWH_VERSION', 'Checks static metadata for table CMT_DWH_VERSION' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_DWH_VERSION)', 'CMR_CHECK','CHK_STM_DWH_VERSION');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_RELEASE', 'Checks static metadata for table CMT_RELEASE' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_RELEASE)', 'CMR_CHECK','CHK_STM_RELEASE');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_HISTORIZATION_TYPE', 'Checks static metadata for table CMT_HISTORIZATION_TYPE' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_HISTORIZATION_TYPE)', 'CMR_CHECK','CHK_STM_HISTORIZATION_TYPE');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_MODEL', 'Checks static metadata for table CMT_MODEL' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_MODEL)', 'CMR_CHECK','CHK_STM_MODEL');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_MODEL_TYPE', 'Checks static metadata for table CMT_MODEL_TYPE' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_MODEL_TYPE)', 'CMR_CHECK','CHK_STM_MODEL_TYPE');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_COLUMN_SUBTYPE', 'Checks static metadata for table CMT_COLUMN_SUBTYPE' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_COLUMN_SUBTYPE)', 'CMR_CHECK','CHK_STM_COLUMN_SUBTYPE');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_TABLE_TYPE', 'Checks static metadata for table CMT_TABLE_TYPE' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_TABLE_TYPE)', 'CMR_CHECK','CHK_STM_TABLE_TYPE');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_COLUMN_TYPE', 'Checks static metadata for table CMT_COLUMN_TYPE' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_COLUMN_TYPE)', 'CMR_CHECK','CHK_STM_COLUMN_TYPE');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_ENTITY', 'Checks static metadata for table CMT_ENTITY' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_ENTITY)', 'CMR_CHECK','CHK_STM_ENTITY');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_SYSTEM', 'Checks static metadata for table CMT_SYSTEM' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_SYSTEM)', 'CMR_CHECK','CHK_STM_SYSTEM');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_APPLICATION', 'Checks static metadata for table CMT_APPLICATION' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_APPLICATION)', 'CMR_CHECK','CHK_STM_APPLICATION');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_ACCESS_LEVEL', 'Checks static metadata for table CMT_ACCESS_LEVEL' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_ACCESS_LEVEL)', 'CMR_CHECK','CHK_STM_ACCESS_LEVEL');
insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID, CHK_NAME, CHK_DESCRIPTION, CHK_AREA,CHK_GROUP,CHK_SUBGROUP, CHK_EXECUTION_FREQUENCY, CHK_SQL, LAST_USER, CHK_CODE)
values (seq_checks.nextval, 'CHK_STM_CONNECTION', 'Checks static metadata for table CMT_CONNECTION' , 'MANDATORY','METADATA','STATIC', 'ON-REQUEST', 'select 1 from dual where not exists (select * from O_LDS_META.CMT_CONNECTION)', 'CMR_CHECK','CHK_STM_CONNECTION');
--TECHNCIAL METADATA
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_TM_ETL_LAYER','Checks technical metadata for table CMT_ETL_LAYER','MANDATORY','METADATA','TECHNIC','ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_TM_ETL_LAYER','select 1 from dual where not exists (select * from O_LDS_META.CMT_ETL_LAYER)');
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_TM_ETL_GROUP','Checks technical metadata for table CMT_ETL_GROUP','MANDATORY','METADATA','TECHNIC','ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_TM_ETL_GROUP','select 1 from dual where not exists (select * from O_LDS_META.CMT_ETL_GROUP)');
Insert into O_LDS_META.CMT_CHECK_DEFINITION (CHK_ID,CHK_NAME,CHK_DESCRIPTION,CHK_AREA,CHK_GROUP,CHK_SUBGROUP,CHK_EXECUTION_FREQUENCY,INSERT_TIME,UPDATE_TIME,LAST_USER,CHK_CODE,CHK_SQL)
values (seq_checks.nextval,'CHK_TM_ETL_KM','Checks technical metadata for table CMT_ETL_KM','MANDATORY','METADATA','TECHNIC','ON-REQUEST',sysdate,sysdate,'CMR_CHECK','CHK_TM_ETL_KM','select 1 from dual where not exists (select * from O_LDS_META.CMT_ETL_KM)');
--
